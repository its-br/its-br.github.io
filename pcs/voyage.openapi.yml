openapi: 3.0.3
servers:
  - description: PCS Voyage API
    url: https://pcs-api.its.org.br/api/voyage/0.0.1
info:
  description: Rest API for manage Voyage
  version: 0.0.1
  title: PCS Voyage API
  contact:
    email: contato@its.org.br
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
paths:
  /voyage-creation:
    post:
      summary: Create a voyage item
      operationId: voyageCreation
      parameters:
        - in: header
          name: PCSAuthorization
          description: Header to provide credentials that authenticate an actor.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: >-
            eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjbnBqIjoiNjQ5Njk4NjkwMDAxMjEiLCJ1c2VyX2FnZW50IjoiMjc5MjgyMDIwMDAxNTQifQ.4h9yVer_GDtpLQbF21FSoQ45nl32j_VwV2mYp0o6HAE
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoyageCreation'
      responses:
        '201':
          description: Item created
          content:
            application/json:
              schema:
                type: object
                properties:
                  receiptID:
                    type: string
                    description: receiptID is receipt of VoyageCreation
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: An existing item already exists
  /voyage-acceptance:
    post:
      summary: >-
        Updates the trip with the information of acceptance or refusal of the
        mooring or tug operation.
      operationId: voyageAcceptance
      parameters:
        - in: header
          name: PCSAuthorization
          description: Header to provide credentials that authenticate an actor.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: >-
            eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjbnBqIjoiNjQ5Njk4NjkwMDAxMjEiLCJ1c2VyX2FnZW50IjoiMjc5MjgyMDIwMDAxNTQifQ.4h9yVer_GDtpLQbF21FSoQ45nl32j_VwV2mYp0o6HAE
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceProvidersAcceptance'
      responses:
        '201':
          description: Item created
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: >-
        Through this interface it is possible to update the acceptance or denial
        of responsibility for a trip
      operationId: updateMaritimeAgencyResponsabilities
      parameters:
        - in: header
          name: PCSAuthorization
          description: Header to provide credentials that authenticate an actor.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: >-
            eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjbnBqIjoiNjQ5Njk4NjkwMDAxMjEiLCJ1c2VyX2FnZW50IjoiMjc5MjgyMDIwMDAxNTQifQ.4h9yVer_GDtpLQbF21FSoQ45nl32j_VwV2mYp0o6HAE
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceProvidersAcceptance'
        description: Updated responsabilities
        required: true
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
  /voyages-acceptance:
    get:
      summary: get a list of voyages and acceptance status
      operationId: getListVoyagesAcceptance
      parameters:
        - in: header
          name: PCSAuthorization
          description: Header to provide credentials that authenticate an actor.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: >-
            eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjbnBqIjoiNjQ5Njk4NjkwMDAxMjEiLCJ1c2VyX2FnZW50IjoiMjc5MjgyMDIwMDAxNTQifQ.4h9yVer_GDtpLQbF21FSoQ45nl32j_VwV2mYp0o6HAE
        - in: query
          name: startDate
          description: >-
            Start date for consultation. The value is populated in ISO 8601 Date
            format.
          schema:
            type: string
            format: date
            example: 14-03-2022
        - in: query
          name: dateRange
          description: >-
            Consultation period. The duration is populated in ISO 8601 Duration
            format.
          schema:
            type: string
            format: iso8601
            example: P4W
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceProvidersAcceptance'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceProvidersAcceptance'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
  /voyage/status/{receiptID}:
    get:
      summary: get voyage status by receipt ID
      operationId: getVoyageStatus
      parameters:
        - in: header
          name: PCSAuthorization
          description: Header to provide credentials that authenticate an actor.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: >-
            eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjbnBqIjoiNjQ5Njk4NjkwMDAxMjEiLCJ1c2VyX2FnZW50IjoiMjc5MjgyMDIwMDAxNTQifQ.4h9yVer_GDtpLQbF21FSoQ45nl32j_VwV2mYp0o6HAE
        - name: receiptID
          in: path
          description: Receipt id that needs to be fetched
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoyageCreationStatus'
            application/xml:
              schema:
                $ref: '#/components/schemas/VoyageCreationStatus'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Voyage not found
  /voyage/{PCSVoyageID}:
    get:
      summary: Get voyage by PCSVoyageID
      operationId: getVoyage
      parameters:
        - in: header
          name: PCSAuthorization
          description: Header to provide credentials that authenticate an actor.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: >-
            eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjbnBqIjoiNjQ5Njk4NjkwMDAxMjEiLCJ1c2VyX2FnZW50IjoiMjc5MjgyMDIwMDAxNTQifQ.4h9yVer_GDtpLQbF21FSoQ45nl32j_VwV2mYp0o6HAE
        - name: PCSVoyageID
          in: path
          description: voyage id that needs to be fetched
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoyageInfo'
            application/xml:
              schema:
                $ref: '#/components/schemas/VoyageInfo'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: voyage not found
    patch:
      summary: Updated Voyage Informations
      operationId: updateVoyage
      parameters:
        - in: header
          name: PCSAuthorization
          description: Header to provide credentials that authenticate an actor.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: >-
            eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjbnBqIjoiNjQ5Njk4NjkwMDAxMjEiLCJ1c2VyX2FnZW50IjoiMjc5MjgyMDIwMDAxNTQifQ.4h9yVer_GDtpLQbF21FSoQ45nl32j_VwV2mYp0o6HAE
        - name: PCSVoyageID
          in: path
          description: ID of voyage that needs to update
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoyageUpdate'
        description: Updated Voyage object
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Voyage not found
    delete:
      summary: Delete Voyage
      operationId: deleteVoyage
      parameters:
        - in: header
          name: PCSAuthorization
          description: Header to provide credentials that authenticate an actor.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: >-
            eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjbnBqIjoiNjQ5Njk4NjkwMDAxMjEiLCJ1c2VyX2FnZW50IjoiMjc5MjgyMDIwMDAxNTQifQ.4h9yVer_GDtpLQbF21FSoQ45nl32j_VwV2mYp0o6HAE
        - name: PCSVoyageID
          in: path
          description: ID of voyage that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Maritime Agent not found
  /voyages:
    get:
      summary: get a list of voyages
      operationId: getListVoyages
      parameters:
        - in: header
          name: PCSAuthorization
          description: Header to provide credentials that authenticate an actor.
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: >-
            eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjbnBqIjoiNjQ5Njk4NjkwMDAxMjEiLCJ1c2VyX2FnZW50IjoiMjc5MjgyMDIwMDAxNTQifQ.4h9yVer_GDtpLQbF21FSoQ45nl32j_VwV2mYp0o6HAE
        - in: query
          name: startDate
          description: >-
            Start date for consultation. The value is populated in ISO 8601 Date
            format.
          schema:
            type: string
            format: date
            example: '2022-01-01'
        - in: query
          name: dateRange
          description: >-
            Consultation period. The duration is populated in ISO 8601 Duration
            format.
          schema:
            type: string
            format: iso8601
            example: P4W
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoyageInfo'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VoyageInfo'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Voyage not found
components:
  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          minLength: 5
          maxLength: 5
          description: error message code
        message:
          type: string
          minLength: 1
          maxLength: 500
          description: error message description
    VoyageInfo:
      type: object
      required:
        - carrierDetails
        - carrierVoyageDetails
        - transportCall
        - maritimeAgencyCnpj
        - maritimeAgentCallBack
        - voyageOperatorStatus
        - eventPlanningStatus
      properties:
        oneOf:
          type: object
          properties:
            PCSVoyageID:
              type: string
              description: Voyage Number generated by PCS
              minLength: 20
              maxLength: 20
              example: PCS00000123456789001
            receiptID:
              type: string
              description: >-
                Receipt code made available to the applicant for future status
                consultation at the time of trip creation
              minLength: 20
              maxLength: 20
              example: PCS00000123456789001
        carrierDetails:
          $ref: '#/components/schemas/CarrierDetails'
        carrierVoyageDetails:
          $ref: '#/components/schemas/CarrierVoyageDetails'
        transportCall:
          type: array
          items:
            $ref: '#/components/schemas/TransportCall'
        maritimeAgencyCnpj:
          type: string
          description: CNPJ of Maritime Agency
          minLength: 14
          maxLength: 14
          example: '99999999999999'
        otherMaritimeAgency:
          type: array
          items:
            $ref: '#/components/schemas/OtherMaritimeAgency'
        maritimeAgentCallBack:
          $ref: '#/components/schemas/MaritimeAgencyCallBack'
        voyageOperatorStatus:
          $ref: '#/components/schemas/VoyageOperatorStatus'
        eventPlanningStatus:
          $ref: '#/components/schemas/EventPlanningStatus'
    ServiceProvidersAcceptance:
      type: object
      required:
        - oneOf
        - cnpj
        - statusCode
      properties:
        oneOf:
          type: object
          properties:
            PCSVoyageID:
              type: string
              description: Voyage Number generated by PCS
              minLength: 20
              maxLength: 20
              example: PCS00000123456789001
            receiptID:
              type: string
              description: >-
                Receipt code made available to the applicant for future status
                consultation at the time of trip creation
              minLength: 20
              maxLength: 20
              example: PCS00000123456789001
        cnpj:
          type: string
          description: CNPJ do ator relacionado a operação
          minLength: 14
          maxLength: 14
          example: '99999999999999'
        acceptance:
          type: string
          enum:
            - Accepted
            - Refused
          description: >-
            Field where the mooring company or tugboat must express acceptance
            or refusal of the operation informed by the shipping agent, related
            to a trip (PCSVoyageID)
          example: Accepted
        transportCallID:
          type: string
          description: ID uniquely identifying a transport call, to filter events by.
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        statusCode:
          type: string
          description: Códigos de aceite de responsabilidade
          example: T001
          enum:
            - T001
            - T002
            - A000
            - A001
            - A002
            - A003
        responsabilityCode:
          type: string
          description: Código de responsabilidade da agência marítima secundária.
          example: '200'
          enum:
            - '000'
            - '100'
            - '200'
            - '300'
    VoyageCreationStatus:
      type: object
      required:
        - statusCodeIMO
        - statusCodePublicSystems
        - statusCodeAgent
        - statusCodeTerminal
        - statusCodeSubscription
      properties:
        statusCodeIMO:
          type: string
          minLength: 4
          maxLength: 4
          description: >-
            Código de status da etapa de validação dos dados da viagem na base
            de dados da IMO
        statusCodePublicSystems:
          type: string
          minLength: 4
          maxLength: 4
          description: >-
            Código de status da etapa de validação dos dados da viagem junto dos
            sistemas públicos
        statusCodeAgent:
          type: string
          minLength: 4
          maxLength: 4
          description: >-
            Código de status da etapa de validação dos dados da viagem junto de
            agentes marítimos secundários
        statusCodeTerminal:
          type: string
          minLength: 4
          maxLength: 4
          description: >-
            Código de status da etapa de validação dos dados da viagem junto do
            terminal portuário
        statusCodeSubscription:
          type: string
          minLength: 4
          maxLength: 4
          description: Código de status da etapa de subscrição no sistema do armador
        PCSVoyageID:
          type: string
          minLength: 20
          maxLength: 20
          description: >-
            Número da viagem gerado pelo PCS. Esse dado só será apresentado caso
            a viagem tenha sido gerada com sucesso
          example: PCS00000123456789001
    VoyageCreation:
      type: object
      required:
        - carrierDetails
        - voyageDetails
        - transportCall
        - maritimeAgencyCallBack
      properties:
        carrierDetails:
          $ref: '#/components/schemas/CarrierDetails'
        carrierVoyageDetails:
          $ref: '#/components/schemas/CarrierVoyageDetails'
        transportCall:
          type: array
          items:
            $ref: '#/components/schemas/TransportCall'
        otherMaritimeAgency:
          type: array
          items:
            $ref: '#/components/schemas/OtherMaritimeAgency'
        maritimeAgencyCallBack:
          $ref: '#/components/schemas/MaritimeAgencyCallBack'
    VoyageUpdate:
      type: object
      required:
        - otherMaritimeAgency
        - maritimeAgencyCallBack
      properties:
        userAgent:
          type: string
          description: Número de CNPJ do procurador, se houver
          minLength: 14
          maxLength: 14
          example: '99999999999999'
        numTransportCall:
          type: integer
          description: Número de paradas no porto
        transportCall:
          type: array
          items:
            $ref: '#/components/schemas/TransportCall'
        otherMaritimeAgency:
          type: array
          items:
            $ref: '#/components/schemas/OtherMaritimeAgency'
        maritimeAgencyCallBack:
          $ref: '#/components/schemas/MaritimeAgencyCallBack'
    CarrierDetails:
      type: object
      required:
        - listProvider
        - carrierCode
      properties:
        listProvider:
          type: string
          description: id of provider of cadastry code for carrier (SMDG or NMFTA)
          enum:
            - SMDG
            - NMFTA
          example: NMFTA
        carrierCode:
          type: string
          description: code of carrier
          example: MSCU
          maxLength: 10
    CarrierVoyageDetails:
      type: object
      required:
        - carrierVoyageNumber
        - vesselIMO
        - UNLocationCode
      properties:
        carrierVoyageNumber:
          type: string
          description: Voyage Id as DCSA Data Model
          example: 2015W
        vesselIMO:
          type: string
          description: IMO code of ship as Lloyd's Register.
          maxLength: 7
          example: '1801323'
        UNLocationCode:
          type: string
          description: city of destiny port code as UN/CEFACT
          maxLength: 5
          example: BRSSZ
    TransportCall:
      type: object
      required:
        - transportCallID
        - portFacilityTypeDcsaCode
        - portFacilityCnpj
      properties:
        transportCallID:
          type: string
          description: ID uniquely identifying a transport call, to filter events by.
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        portFacilityTypeDcsaCode:
          type: string
          description: Code of port facility defined by DSCA
          example: POTE
        portFacilityCnpj:
          type: string
          description: CNPJ of port facility
          minLength: 14
          maxLength: 14
          example: '99999999999999'
        mooringOperatorCnpj:
          type: string
          description: CNPJ of responsible for mooring
          minLength: 14
          maxLength: 14
          example: '99999999999999'
        tugboatCompanyCnpj:
          type: string
          description: CNPJ of Tugboat Operator
          minLength: 14
          maxLength: 14
          example: '99999999999999'
    OtherMaritimeAgency:
      type: object
      required:
        - maritimeAgencyCnpj
        - responsabilityCode
      properties:
        maritimeAgencyCnpj:
          type: string
          description: cnjp number of maritime agency
          minLength: 14
          maxLength: 14
          example: '99999999999999'
        responsabilityCode:
          type: string
          description: 000 code means all responsability
          example: '000'
          enum:
            - '000'
            - '100'
            - '200'
            - '300'
    MaritimeAgencyCallBack:
      type: object
      required:
        - callBackURL
        - startDate
        - rangeDate
      properties:
        callBackURL:
          type: string
          description: Url path by which PCS should send the trip data update set
          format: uri
          example: https://myserver.com/send/callback/here
        startDate:
          type: string
          description: >-
            Start date of receiving the update data set. The value is populated
            in ISO 8601 Date format.
          format: date
          example: '2022-01-01'
        rangeDate:
          type: string
          description: >-
            The period for which the roster information is sent to the
            requester. The duration is populated in ISO 8601 Duration format.
          format: iso8601
          example: P4W
    VoyageGeneralStatus:
      type: object
      required:
        - carrierServiceCode
        - vesselIMOnumber
        - vesselName
        - facilityTypeCode
        - facilityCode
      properties:
        carrierServiceCode:
          type: string
          description: The code of the service to which the schedule details are published.
          example: FE1
        vesselIMOnumber:
          type: string
          description: >-
            The identifier of the vessel for which schedule details are
            published.
          maxLength: 7
          example: '1801323'
        vesselName:
          type: string
          description: The name of the vessel identified by the IMO number.
          example: Vessel A
        carrierVoyageNumber:
          type: string
          description: >-
            The ship operator has assigned a voyage number to the respective
            voyage.
          example: 2015W
          maxLength: 50
        UNLocationCode:
          type: string
          description: The UN location code identifies a location towards a city
          maxLength: 5
          example: BRSSZ
        UNLocationName:
          type: string
          description: The name UN location idenified at UNLocationCode
          example: Santos
        transportCallNumber:
          type: integer
          description: >-
            The field contains the sequence of calls for installations within
            the port.
          example: 1
        facilityTypeCode:
          type: string
          description: The four-character DCSA code to identify the facility type.
          maxLength: 4
          example: POTE
        facilityCode:
          type: string
          description: >-
            The code used to identify the specific port terminal being called. A
            default value of 'other facility' is used if a code has not been
            assigned to a facility. SMDG reference codes are used for this
            attribute.
          maxLength: 11
          example: AEAUHADT
        otherFacility:
          type: string
          description: >-
            Alternative way to capture installation details when no standardized
            DCSA installation code can be found.
          maxLength: 50
          example: endereço ou localização
    VoyageOperatorStatus:
      type: object
      required:
        - subscriptionID
        - vesselOperatorCarrierCode
        - vesselOperatorCarrierCodeListProvider
        - voyageGeneralStatus
      properties:
        subscriptionID:
          type: string
          description: The application for which this event is published
          example: jlke123j
        vesselOperatorCarrierCode:
          type: string
          description: vessel operator identifier publishing the event
          example: MAEU
          maxLength: 10
        vesselOperatorCarrierCodeListProvider:
          type: string
          description: >-
            The parameter identifies the codelist provider used for operator and
            partner operator codes. Possible values are:/ SMDG or NMFTA
          enum:
            - SMDG
            - NMFTA
          example: NMFTA
        vesselPartnerCarrierCode:
          type: string
          description: >-
            The identifier of the ship's partner for which the current message
            is intended. This field allows specifying multiple values separated
            by commas if there is more than one ship partner involved.
          example: MSCU,HLCU
          maxLength: 10
          minLength: 10
        vesselPartnerCarrierCodeListProvider:
          type: string
          description: >-
            The parameter identifies the codelist provider used for the vessel
            operator and partner carrier codes. Possible values are:/ SMDG or
            NMFTA
          enum:
            - SMDG
            - NMFTA
          example: NMFTA
        startDate:
          type: string
          description: >-
            Start date of receiving the update data set. The value is populated
            in ISO 8601 Date format.
          format: date
          example: '2022-01-01'
        rangeDate:
          type: string
          description: >-
            The period for which the roster information is sent to the
            requester. The duration is populated in ISO 8601 Duration format.
          format: iso8601
          example: P4W
        voyageGeneralStatus:
          $ref: '#/components/schemas/VoyageGeneralStatus'
    EventPlanningStatus:
      type: object
      required:
        - berthingStatusCode
        - pilotBoardingPlaceStatusCode
        - startOperationStatusCode
        - completionOperationStatusCode
        - unberthingStatusCode
      properties:
        berthingStatusCode:
          type: string
          description: >-
            Travel status code in relation to the berthing event, as per status
            codes
          enum:
            - B000
            - B001
            - B002
            - B003
            - B004
          example: B001
        pilotBoardingPlaceStatusCode:
          type: string
          description: >-
            Travel status code in relation to the pilot boarding event, as per
            status codes
          enum:
            - P000
            - P001
            - P002
            - P003
            - P004
          example: P001
        startOperationStatusCode:
          type: string
          description: >-
            Travel status code in relation to the start of operation event, as
            per status codes
          enum:
            - S000
            - S002
          example: S001
        completionOperationStatusCode:
          type: string
          description: >-
            Travel status code in relation to the completion of operation event,
            as per status codes
          enum:
            - C000
            - C001
            - C002
            - C003
            - C004
          example: C001
        unberthingStatusCode:
          type: string
          description: >-
            Travel status code in relation to the unberthing event, as per
            status codes
          enum:
            - D000
            - D001
            - D002
            - D003
            - D004
          example: D001
